#
# ~/.bashrc
#

# If not running interactively, don't do anything
#[[ $- != *i* ]] && return


alias ls='ls --color=always'
alias grep="grep --color=always"
alias diff="diff --color=always"
alias less="less -R"
alias sudo="doas"
alias astcfg="nvim ~/.config/dwm/scripts/autostart"
alias dwmconfig="nvim ~/Programs/dwm-6.2/config.h"
alias nvimconfig="nvim /home/rohit/.config/nvim/init.vim"
alias ll='ls -l'
alias la='ls -a'
alias lla='ls -al'

export PATH=$PATH:$HOME/.local/bin
export GOPATH=${HOME}/.local/lib/go
export HISTCONTROL=ignoredups
export HISTFILE=/home/rohit/.bash_history
export HISTFILESIZE=2000
export HISTSIZE=1000
export EDITOR=nvim

shopt -s checkwinsize
shopt -s autocd
set -o noclobber

rm() { command rm -i "${@}"; }
cp() { command cp -i "${@}"; }
mv() { command mv -i "${@}"; }

searchpkg() { command pacman -Ss "${@}"; }
installpkg() { command doas pacman -S "${@}"; }
removepkg() { command doas pacman -Rns "${@}"; }
update() { command doas pacman -Syu "${@}"; }
startmpd (){ command doas mpd /home/rohit/.config/mpd/mpd.conf "${@}"; }
get_not_installed(){ command pacman -Si $1 | grep -iE 'Depends\ On' | sed 's/Depends\ On\ \ \ \ \ \ ://' | xargs pacman -Q  2>&1- | grep -iE 'error' | awk '{print $3}' | sed "s/'//g" ; }
encrypt() { command gpg -c --s2k-cipher-algo TWOFISH --s2k-digest-algo SHA256 "${@}" ; }
decrypt() { command gpg --output "${@}.txt" -d "${@}" ; }
message()
{    
    echo -e "Just how long can we come saying 'Just this once'\nuntil it becomes a habbit?\n\
            - Luke von Fabre (Tales of the Abyss)"
}

## SSH agent
if ! pgrep -u "$USER" ssh-agent > /dev/null; then
        ssh-agent  > "$XDG_RUNTIME_DIR/ssh-agent.env"
fi

if [[ ! "$SSH_AUTH_SOCK" ]]; then
    source "$XDG_RUNTIME_DIR/ssh-agent.env" >/dev/null
    ssh-add ~/.ssh/github
    #for file in ~/.ssh/ ; do
    #    if [[ ! $file=*.pub ]]; then
    #        ssh-add ~/.ssh/$file
    #        echo "added $file\n"
    #    fi
    #done
fi

__prompt_command () 
{ 
    local EXIT="$?";
    PS1="";
    local RCol='\[\e[0m\]';
    local Red='\[\e[0;31m\]';
    local Gre='\[\e[0;32m\]';
    local BGre='\[\e[1;32m\]';
    local Org='\[\e[38;5;208m\]';
    local BYel='\[\e[0;33m\]';
    local BBlu='\[\e[1;34m\]';
    local Pur='\[\e[0;35m\]';
    PS1+="${Org}[${RCol} ${BBlu}\u${RCol}@${BYel}\h ${Pur}\w ${RCol} ${Org}]${RCol}";
    if [ $EXIT != 0 ]; then
        PS1+="\n${Red}:-( ${RCol}";
    else
        PS1+="\n${Gre}:-) ${RCol}";
    fi
}


PROMPT_COMMAND=__prompt_command
export PS2=""

if [[ -z "${DISPLAY}" ]] && [[ "${XDG_VTNR}" -eq 1 ]]; then
    exec startx 2> /dev/null
fi

alias feh='feh -g 1900x1000'

message
#unset message
echo ""
#pfetch
