#! /bin/bash

# Colors
red="\e[0;91m"
blue="\e[0;94m"
expand_bg="\e[K"
blue_bg="\e[0;104m${expand_bg}"
red_bg="\e[0;101m${expand_bg}"
green_bg="\e[0;102m${expand_bg}"
green="\e[0;92m"
white="\e[0;97m"
bold="\e[1m"
uline="\e[4m"
reset="\e[0m"

#Icons
diskicon="\uf233"
#baticon="Battery"
ramicon="\uf85a"
procicon="\uf2db"
tempicon="\uf8c7"
timeicon="\uf017"
dateicon="\uf5ed"
#delim="|"

while : ; do
    #Home Disk Space
    hdd="$(df -h | awk '/^\/dev\/mapper\/volgroup0-home--arch/ {print $3 "/" $2}')"

    #Battery remaning
    bat_dir="/sys/class/power_supply/BAT0/"
    if [ -e "${bat_dir}" ] ; then
        bat="$(cat /sys/class/power_supply/BAT0/capacity)"
        bat_stat="$(cat /sys/class/power_supply/BAT0/status)"

        #If the status of battery is unkonwn, the charger might just be plugged in.
        while [[ $bat_stat = 'Unknown'  ]] ; do
            bat_stat="$(cat /sys/class/power_supply/BAT0/status)"
        done

        if [ $bat_stat = 'Discharging' ] ; then
            if [ $bat -ge 80 ]; then                        #Full
                bat_stat="\uf240"
            elif [ $bat -ge 75 ] && [ $bat -lt 80 ] ; then  #Three-quater
                bat_stat="\uf241"
            elif [ $bat -ge 50 ] && [ $bat -lt 75 ] ; then  #Half
                bat_stat="\uf242"
            elif [ $bat -gt 10 ] && [ $bat -lt 50 ] ; then  #Quarter
                bat_stat="\uf243"
            elif [ $bat -le 10 ] ; then                     #Almost empty
                bat_stat="\uf244"
                # Critical notification, timeout after 11 seconds
                notify-send -u critical "Battery Low" "$bat% remaining" -t 11000

                # script to run when the battery is low.
                ~/.config/dwm/scripts/crit_run
            fi

        #elif  [ $bat -ge 98 ] && { [ $bat_stat = 'Charging' ] || [ $bat_stat = 'Full' ] ;} ;  then
        #    notify-send -u normal "Sufficiently Charged" "$bat% remaining" -t 11000
        #fi
        elif [ $bat_stat = 'Charging' ] ; then
            bat_stat='\uf0e7'
            if [ $bat -ge 98 ] ; then
                notify-send -u normal "Sufficiently Charged" "$bat% remaining" -t 11000
            fi
        elif [ $bat_stat = 'Full' ] ; then
            bat_stat='\uf240 \uf0e7'
            notify-send -u normal "Sufficiently Charged" "$bat% remaining" -t 11000
        fi
        bat=${bat}%

    else
        bat_stat="??"
        bat=""
    fi

    #Most memory intense process
    proce="$(ps axch -o cmd,%mem --sort=-%mem | awk 'NR==1' | sed 's/\ /\\/' | awk '{print $1 " " $2}' | sed 's/\\/\ /')%" 

    #Temprature
    temp="$(sensors | awk '/^CPU/ {print $2}' | sed 's/+// ')" # get the temprature ad ignore the +

    #time and date
    time="$(date +%I:%M\ %p)"
    date="$(date +%-d-%-m-%Y\ %A)"  # bash references variables by $

    #RAM usage
    #ram="$(free -m | grep Mem | awk '{print $3 "MB/" $2"MB"}')"
    ram="$(free -m | grep Mem | awk '{printf " %d%", $3/$2*100}')"

    #Volume
    volume=$(amixer sget Master | grep -iE 'Front\ Left:\ Playback' | awk -F'[][]' '{ print $2}') 
    
    # Disk, Battery, Volume, Ram, Process, Temp, Time, date
    text=$(printf "\
  [ ${diskicon}:%s ] [ ${bat_stat}:%s ]\
  [ Volume:%s ] [ ${ramicon}:%s ]\
  [ ${procicon}:%s ] [ ${tempicon}:%s ]\
  [ ${timeicon}:%s ] [ ${dateicon}:%s ]"\
 "$hdd" "$bat" "$volume" "$ram" "$proce" "$temp" "$time" "$date"\
 )

    xsetroot -name "${text}"

    #Sleep for 12 seconds
    sleep 12

done

# Unnecessary scripts for reference only
#   time="$(date|awk '{print $4}'|sed 's/...$//')"
#   date="$(date|awk '{print $1 " " $3 " " $2 " " $7}')"
 
